@inherits Umbraco.Web.Macros.PartialViewMacroPage

	<nav class="navbar navbar-default">
	@{ var root = CurrentPage.AncestorOrSelf(1); }
<ul class="nav navbar-nav">
<li class="@(CurrentPage.Name == root.Name ? "active" : null)">
<a href="/">@root.Name</a>
</li>
@foreach (var menuItem in root.Children.Where("Visible")) {
    var isProtected = umbraco.library.IsProtected(menuItem.id, menuItem.path);
    var loginAccess = umbraco.library.IsProtected(menuItem.id, menuItem.path) && umbraco.library.HasAccess(menuItem.id, menuItem.path);
    if (!isProtected || loginAccess)
    {
        <li class="@(menuItem.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
        <a href="@menuItem.Url">@menuItem.Name</a>
        </li>
    }
}
<li class="dropdown">
  <a class="dropdown-toggle" data-toggle="dropdown" href='@Model.Content.AncestorOrSelf(1).Children.Where(x => x.DocumentTypeAlias == "projectsMain")'>Our Projects<span class="caret"></span></a>
  <ul class="dropdown-menu">
@{
              IQueryable projectsDropdown =
                Model.Content.AncestorOrSelf(1)
                .Children
                .Where(x => x.DocumentTypeAlias == "projectsMain")
                .First()
                .Children
                .Where("Visible")
                .OrderBy("Name");

            }
            @foreach (IPublishedContent project in projectsDropdown)
            {
                var isProtected = umbraco.library.IsProtected(project.Id, project.Path);
                var loginAccess = umbraco.library.IsProtected(project.Id, project.Path) && umbraco.library.HasAccess(project.Id, project.Path);
                if (!isProtected || loginAccess)
                {
                    <li><a href="@project.Url">@project.Name</a></li>
                }


            }
</ul> 
</nav>